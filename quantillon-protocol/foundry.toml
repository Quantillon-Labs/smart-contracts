[profile.default]
src = "src"
out = "out"
libs = ["lib"]
test = "test"
cache_path = "cache"

# Solidity version
solc_version = "0.8.24"
evm_version = "paris"

# Optimization
optimizer = true
optimizer_runs = 200
via_ir = true

# Base network configuration
[rpc_endpoints]
base = "https://mainnet.base.org"
base_sepolia = "https://sepolia.base.org"
ethereum = "https://eth.llamarpc.com"
arbitrum = "https://arb1.arbitrum.io/rpc"

[etherscan]
base = { key = "${BASESCAN_API_KEY}", url = "https://api.basescan.org/api" }
base_sepolia = { key = "${BASESCAN_API_KEY}", url = "https://api-sepolia.basescan.org/api" }

# Gas optimization
gas_price = 0
gas_limit = 30000000
block_gas_limit = 30000000

# Testing configuration
fuzz = { runs = 1000 }
invariant = { runs = 256, depth = 15, fail_on_revert = false }

# Remappings for dependencies
remappings = [
    "@openzeppelin/=lib/openzeppelin-contracts/",
    "@chainlink/=lib/chainlink-brownie-contracts/",
    "@foundry-devops/=lib/foundry-devops/",
    "forge-std/=lib/forge-std/src/"
]

# Additional compiler settings
[profile.default.model_checker]
contracts = { "src" = [ "all" ] }
engine = "chc"
targets = [ "assert", "underflow", "overflow", "divByZero", "constantCondition", "popEmptyArray", "outOfBounds" ]

# Production profile for deployment
[profile.production]
optimizer = true
optimizer_runs = 1000000  # Higher optimization for mainnet
via_ir = true

# Testing profile
[profile.test]
optimizer = false
via_ir = false