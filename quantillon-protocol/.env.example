# =============================================================================
# QUANTILLON PROTOCOL - ENVIRONMENT VARIABLES TEMPLATE
# =============================================================================
# 
# INSTRUCTIONS:
# 1. Copy this file to .env: cp .env.example .env
# 2. Fill in all variables with your actual values
# 3. NEVER commit the .env file (it's in .gitignore)
#
# =============================================================================

# =============================================================================
# üåê NETWORK CONFIGURATION
# =============================================================================

# Base Mainnet (Production)
# Where to get: https://chainlist.org/chain/8453
BASE_RPC_URL="https://mainnet.base.org"
BASE_CHAIN_ID=8453

# Base Sepolia (Testnet for development)
# Where to get: https://chainlist.org/chain/84532
BASE_SEPOLIA_RPC_URL="https://sepolia.base.org"
BASE_SEPOLIA_CHAIN_ID=84532

# Alternative RPCs (optional, for fallback)
# Get keys from: https://alchemy.com, https://infura.io
ALCHEMY_BASE_URL="https://base-mainnet.g.alchemy.com/v2/YOUR_API_KEY"
INFURA_BASE_URL="https://base-mainnet.infura.io/v3/YOUR_PROJECT_ID"

# =============================================================================
# üîë PRIVATE KEYS AND SECURITY
# =============================================================================

# Deployer private key
# ‚ö†Ô∏è  CRITICAL SECURITY:
# - Use a dedicated wallet for deployments
# - In production, use a hardware wallet or Ledger
# - This key must have ETH on Base for gas fees
DEPLOYER_PRIVATE_KEY="0x1234567890abcdef..." # Replace with your actual key

# Keys for local testing (do not use in production)
# These keys are public and known, OK for development only
TEST_PRIVATE_KEY_1="0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
TEST_PRIVATE_KEY_2="0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d"

# =============================================================================
# üèõÔ∏è MULTISIG ADDRESSES (GOVERNANCE)
# =============================================================================

# Quantillon Foundation Multisig
# Used for: Admin roles, critical upgrades, treasury
# Recommended configuration: 3/5 multisig with Gnosis Safe
FOUNDATION_MULTISIG="0x..." # To be configured after multisig creation

# Treasury Multisig
# Used for: Protocol fund management, reserves
TREASURY_MULTISIG="0x..." # Can be the same as Foundation initially

# Emergency Multisig
# Used for: Emergency pause, critical interventions
EMERGENCY_MULTISIG="0x..." # Must be different for security

# =============================================================================
# üîç API KEYS FOR VERIFICATION
# =============================================================================

# Basescan (Base block explorer)
# Where to get: https://basescan.org/apis
# Used for: Automatic verification of deployed contracts
BASESCAN_API_KEY="your_basescan_api_key_here"

# Optional APIs for monitoring
ALCHEMY_API_KEY="your_alchemy_key"
INFURA_API_KEY="your_infura_key"
MORALIS_API_KEY="your_moralis_key"

# =============================================================================
# üìä CHAINLINK ORACLES (BASE MAINNET)
# =============================================================================

# EUR/USD Price
# Check current address at: https://docs.chain.link/data-feeds/price-feeds/addresses?network=base                                                                                     
EUR_USD_PRICE_FEED="0x..." # To be updated with real Chainlink address

# USDC/USD Price (for USDC = $1.00 validation)
USDC_USD_PRICE_FEED="0x..." # To be updated with real Chainlink address

# Backup feeds (optional)
BACKUP_EUR_USD_FEED="0x..."
BACKUP_USDC_USD_FEED="0x..."

# =============================================================================
# üè¶ EXTERNAL PROTOCOL ADDRESSES (BASE MAINNET)
# =============================================================================

# USDC on Base (main collateral token)
# Verified official address: https://basescan.org/token/0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913                                                                                         
USDC_ADDRESS="0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"

# Aave V3 on Base (for collateral yield farming)
# Documentation: https://docs.aave.com/developers/deployed-contracts/v3-mainnet/base
AAVE_POOL="0xA238Dd80C259a72e81d7e4664a9801593F98d1c5"
AAVE_POOL_PROVIDER="0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e"
AAVE_REWARDS_CONTROLLER="0x..." # To be verified
AUSDC_TOKEN="0x..." # aUSDC token, will be obtained after Aave deployment

# Uniswap V3 on Base (for automatic swaps)
# Documentation: https://docs.uniswap.org/contracts/v3/reference/deployments
UNISWAP_V3_ROUTER="0x2626664c2603336E57B271c5C0b26F421741e481"
UNISWAP_V3_FACTORY="0x33128a8fC17869897dcE68Ed026d694621f6FDfD"
UNISWAP_V3_QUOTER="0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a"

# Other DeFi protocols (for future integrations)
COMPOUND_COMPTROLLER="0x..." # If Compound integration
CURVE_REGISTRY="0x..."       # If Curve integration
BALANCER_VAULT="0x..."       # If Balancer integration

# =============================================================================
# ‚öôÔ∏è PROTOCOL PARAMETERS
# =============================================================================

# Collateralization ratios (in percentage * 100)
# Example: 101 = 101% = 1.01 minimum ratio
INITIAL_COLLATERAL_RATIO=101        # Minimum ratio to mint QEURO
LIQUIDATION_THRESHOLD=100           # Liquidation threshold (100%)
HEDGER_LIQUIDATION_THRESHOLD=1      # Hedger liquidation threshold (1%)

# Yield parameters
INITIAL_YIELD_SHIFT=50              # 0.5% in basis points (50/10000)
PROTOCOL_FEE=10                     # 0.1% in basis points (10/10000)

# Governance parameters
GOVERNANCE_DELAY=86400              # 24 hours in seconds
PROPOSAL_THRESHOLD=1000000          # 1M QTI tokens to propose
VOTING_PERIOD=40320                 # 1 week in blocks (12s/block)
VOTING_DELAY=7200                   # 1 day in blocks

# Protocol limits
MAX_QEURO_SUPPLY=100000000          # 100M QEURO maximum
MIN_MINT_AMOUNT=100                 # 100 QEURO minimum per mint
MAX_MINT_AMOUNT=10000000            # 10M QEURO maximum per mint

# =============================================================================
# üîß DEVELOPMENT CONFIGURATION
# =============================================================================

# Development mode
DEV_MODE=true                       # Enable detailed logs
VERBOSE_TESTS=true                  # Verbose tests by default
AUTO_VERIFY=true                    # Automatic contract verification

# Local configuration (Anvil)
ANVIL_PORT=8545
ANVIL_HOST="127.0.0.1"
ANVIL_CHAIN_ID=31337
ANVIL_BLOCK_TIME=12                 # Simulate Base (12s per block)

# =============================================================================
# üìä MONITORING AND ALERTS (OPTIONAL)
# =============================================================================

# Webhooks for notifications
DISCORD_WEBHOOK_URL="https://discord.com/api/webhooks/..."
SLACK_WEBHOOK_URL="https://hooks.slack.com/..."
TELEGRAM_BOT_TOKEN="your_telegram_bot_token"
TELEGRAM_CHAT_ID="your_telegram_chat_id"

# Monitoring services
TENDERLY_PROJECT_ID="your_tenderly_project"
DEFENDER_API_KEY="your_openzeppelin_defender_key"

# =============================================================================
# üìù IMPORTANT NOTES
# =============================================================================

# 1. SECURITY:
#    - Never commit the .env file
#    - Use dedicated wallets for deployment
#    - Regular rotation of API keys
#    - Hardware wallets recommended for mainnet

# 2. NETWORK:
#    - ALWAYS test on Base Sepolia before mainnet
#    - Verify external contract addresses
#    - Monitor gas prices before deployment

# 3. GOVERNANCE:
#    - Configure multisigs BEFORE deployment
#    - Test governance processes on testnet
#    - Document all procedures

# 4. BACKUP:
#    - Securely backup private keys
#    - Document all deployments
#    - Keep build artifacts

# =============================================================================
# üìÅ FRONTEND INTEGRATION PATHS
# =============================================================================

# ABI Directory Paths (relative to smart-contracts root)
FRONTEND_ABI_DIR=../../../quantillon-dapp/src/lib/contracts/abis/
SMART_CONTRACTS_OUT=./out/

# Frontend Addresses File Path (relative to smart-contracts root)
FRONTEND_ADDRESSES_FILE=../../../quantillon-dapp/src/config/addresses.json
