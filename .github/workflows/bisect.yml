name: Forge Docs (Matrix Bisect)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  bisect:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        part: [ "core", "tokens", "staking", "governance", "interfaces", "libraries", "oracle", "utils", "mocks" ]
    env:
      FOUNDRY_PROFILE: docs
      RUST_MIN_STACK: 50331648

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry (stable)
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Show tool versions
        run: |
          forge --version
          anvil --version
          cast --version

      - name: Install dependencies (forge install)
        working-directory: quantillon-protocol
        run: |
          forge install --no-commit \
            openzeppelin/openzeppelin-contracts@v5.0.2 \
            openzeppelin/openzeppelin-contracts-upgradeable@v5.0.2 \
            foundry-rs/forge-std@v1.9.5 \
            smartcontractkit/chainlink-brownie-contracts@1.1.1

      - name: Build (sanity)
        working-directory: quantillon-protocol
        run: forge build -vv

      - name: Generate temp Foundry config for this part
        id: cfg
        working-directory: quantillon-protocol
        run: |
          PART="${{ matrix.part }}"
          printf '%s\n' \
            '[profile.docs]' \
            'optimizer = false' \
            'via_ir = false' \
            'solc_version = "0.8.24"' \
            'evm_version = "paris"' \
            '' \
            '[doc]' \
            'out = "docs"' \
            "include = [\"src/${PART}/**\"]" \
            'ignore  = ["lib/**","test/**","script/**","scripts/**","node_modules/**"]' \
            > foundry.docs.toml
          echo "config_path=$PWD/foundry.docs.toml" >> "$GITHUB_OUTPUT"

      - name: Run forge doc for src/${{ matrix.part }}/**
        id: docs
        working-directory: quantillon-protocol
        env:
          FOUNDRY_CONFIG: ${{ steps.cfg.outputs.config_path }}
        run: |
          rm -rf docs
          echo "=== Running docs for src/${{ matrix.part }}/** ==="
          set -o pipefail
          forge doc --out docs --build -vv | tee "forge-doc-${{ matrix.part }}.log"

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-${{ matrix.part }}
          path: |
            quantillon-protocol/docs/**
            quantillon-protocol/forge-doc-${{ matrix.part }}.log
