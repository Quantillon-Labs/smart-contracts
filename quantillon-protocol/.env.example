# =============================================================================
# QUANTILLON PROTOCOL - ENVIRONMENT VARIABLES TEMPLATE
# =============================================================================
# 
# INSTRUCTIONS:
# 1. Copy this file to .env: cp .env.example .env
# 2. Fill in all variables with your actual values
# 3. NEVER commit the .env file (it's in .gitignore)
#
# This template shows all environment variables used by the smart contracts
# repository with their usage locations and purposes.
# =============================================================================

# =============================================================================
# üîç API KEYS FOR CONTRACT VERIFICATION
# =============================================================================

# BASESCAN_API_KEY
# Usage: foundry.toml, deploy-base-sepolia.sh
# Purpose: API key for BaseScan (Base block explorer) to automatically verify
#          deployed contracts on Base mainnet and Base Sepolia testnet
# Where to get: https://basescan.org/apis
BASESCAN_API_KEY=your_basescan_api_key_here

# =============================================================================
# üîë DEPLOYMENT CREDENTIALS
# =============================================================================

# PRIVATE_KEY
# Usage: All deployment scripts (DeployProduction.s.sol, DeployQuantillon.s.sol,
#        DeployMockUSDC.s.sol, DeployMockFeeds.s.sol, DeployOracleWithProxy.s.sol,
#        InitializeQuantillon.s.sol, refresh-price-feeds.sh)
# Purpose: Private key of the deployer wallet used to deploy contracts
# ‚ö†Ô∏è  SECURITY: Use a dedicated wallet for deployments only
# ‚ö†Ô∏è  NEVER use your main wallet's private key
PRIVATE_KEY=0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef

# =============================================================================
# üìÅ FRONTEND INTEGRATION PATHS
# =============================================================================

# FRONTEND_ABI_DIR
# Usage: copy-abis.sh
# Purpose: Directory path where contract ABIs are copied for frontend integration
#          Relative path from smart-contracts root to frontend ABI directory
# Example: ./your-frontend-repo/src/lib/contracts/abis/
FRONTEND_ABI_DIR=./your-frontend-repo/src/lib/contracts/abis/

# FRONTEND_ADDRESSES_FILE
# Usage: update-frontend-addresses.sh
# Purpose: Path to the addresses.json file that contains deployed contract
#          addresses for frontend configuration
# Example: ./your-frontend-repo/src/config/addresses.json
FRONTEND_ADDRESSES_FILE=./your-frontend-repo/src/config/addresses.json

# SMART_CONTRACTS_OUT
# Usage: copy-abis.sh
# Purpose: Directory path where compiled contract artifacts are stored
#          Used as source directory when copying ABIs to frontend
# Default: ./out/
SMART_CONTRACTS_OUT=./out/

# =============================================================================
# üèõÔ∏è PRODUCTION DEPLOYMENT CONFIGURATION
# =============================================================================

# MULTISIG_WALLET
# Usage: DeployProduction.s.sol
# Purpose: Address of the multisig wallet that will be set as admin for all
#          contracts in production deployment (UUPS proxy pattern)
# ‚ö†Ô∏è  REQUIRED: Must be set before production deployment
# Example: 0x1234567890123456789012345678901234567890
MULTISIG_WALLET=

# NETWORK
# Usage: DeployProduction.s.sol
# Purpose: Target network for production deployment
# Options: "base", "base-sepolia", "localhost"
# Used to load network-specific configuration like oracle addresses
NETWORK=localhost

# =============================================================================
# üåê NETWORK-SPECIFIC CONFIGURATION (Production Only)
# =============================================================================
# These variables are used by DeployProduction.s.sol for real network deployments
# Format: <VARIABLE>_<NETWORK> where NETWORK is uppercase

# Base Mainnet Configuration
# EUR_USD_FEED_BASE=0x...
# USDC_USD_FEED_BASE=0x...
# USDC_TOKEN_BASE=0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913
# AAVE_POOL_BASE=0xA238Dd80C259a72e81d7e4664a9801593F98d1c5
# REWARDS_CONTROLLER_BASE=0x...

# Base Sepolia Configuration
# EUR_USD_FEED_BASE_SEPOLIA=0x...
# USDC_USD_FEED_BASE_SEPOLIA=0x...
# USDC_TOKEN_BASE_SEPOLIA=0x036CbD53842c5426634e7929541eC2318f3dCF7e
# AAVE_POOL_BASE_SEPOLIA=0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951
# REWARDS_CONTROLLER_BASE_SEPOLIA=0x...

# =============================================================================
# üìù DEVELOPMENT NOTES
# =============================================================================
#
# 1. PATH CONFIGURATION:
#    - All paths are relative to the smart-contracts/quantillon-protocol directory
#    - Adjust FRONTEND_ABI_DIR and FRONTEND_ADDRESSES_FILE to match your
#      frontend repository structure and location
#
# 2. SECURITY:
#    - Never commit the actual .env file to version control
#    - Use a dedicated wallet for deployments, not your main wallet
#    - Rotate API keys regularly
#    - For production, use hardware wallets or secure key management
#
# 3. DEPLOYMENT WORKFLOW:
#    - For localhost: Only PRIVATE_KEY is required
#    - For testnet: Add BASESCAN_API_KEY for verification
#    - For mainnet: Add MULTISIG_WALLET and all network-specific variables
#
# 4. FRONTEND INTEGRATION:
#    - Run ./scripts/deployment/copy-abis.sh after contract changes
#    - Run ./scripts/deployment/update-frontend-addresses.sh after deployment
#
# 5. TROUBLESHOOTING:
#    - If paths don't work, check your repository structure
#    - If deployment fails, verify PRIVATE_KEY has sufficient ETH for gas
#    - If verification fails, check BASESCAN_API_KEY is valid
#
# =============================================================================
